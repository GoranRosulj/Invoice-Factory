<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="2" total="16" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="TestSuite" duration-ms="41836" started-at="2018-08-04T09:16:38Z" finished-at="2018-08-04T09:17:20Z">
    <groups>
    </groups>
    <test name="Testing" duration-ms="41836" started-at="2018-08-04T09:16:38Z" finished-at="2018-08-04T09:17:20Z">
      <class name="tests.InvoicesPageTests">
        <test-method status="PASS" signature="verifySelectClientDisplayed()[pri:23, instance:tests.InvoicesPageTests@18be83e4]" name="verifySelectClientDisplayed" duration-ms="87" started-at="2018-08-04T09:16:41Z" finished-at="2018-08-04T09:16:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySelectClientDisplayed -->
        <test-method status="PASS" signature="verifyInvoicesFromDisplayed()[pri:24, instance:tests.InvoicesPageTests@18be83e4]" name="verifyInvoicesFromDisplayed" duration-ms="633" started-at="2018-08-04T09:16:41Z" finished-at="2018-08-04T09:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvoicesFromDisplayed -->
        <test-method status="PASS" signature="verifyInvoicesToDisplayed()[pri:25, instance:tests.InvoicesPageTests@18be83e4]" name="verifyInvoicesToDisplayed" duration-ms="292" started-at="2018-08-04T09:16:42Z" finished-at="2018-08-04T09:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvoicesToDisplayed -->
        <test-method status="PASS" signature="verifyFilterPeriodDropBtnDisplayed()[pri:26, instance:tests.InvoicesPageTests@18be83e4]" name="verifyFilterPeriodDropBtnDisplayed" duration-ms="75" started-at="2018-08-04T09:16:42Z" finished-at="2018-08-04T09:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFilterPeriodDropBtnDisplayed -->
        <test-method status="PASS" signature="verifyFilterResetAll()[pri:27, instance:tests.InvoicesPageTests@18be83e4]" name="verifyFilterResetAll" duration-ms="77" started-at="2018-08-04T09:16:42Z" finished-at="2018-08-04T09:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFilterResetAll -->
        <test-method status="PASS" signature="verifyAddInvoiceBtn()[pri:28, instance:tests.InvoicesPageTests@18be83e4]" name="verifyAddInvoiceBtn" duration-ms="80" started-at="2018-08-04T09:16:42Z" finished-at="2018-08-04T09:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddInvoiceBtn -->
        <test-method status="PASS" signature="checkAddInvoiceBtn()[pri:29, instance:tests.InvoicesPageTests@18be83e4]" name="checkAddInvoiceBtn" duration-ms="728" started-at="2018-08-04T09:16:42Z" finished-at="2018-08-04T09:16:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAddInvoiceBtn -->
        <test-method status="PASS" signature="checkInvoiceBackBtn()[pri:30, instance:tests.InvoicesPageTests@18be83e4]" name="checkInvoiceBackBtn" duration-ms="727" started-at="2018-08-04T09:16:43Z" finished-at="2018-08-04T09:16:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInvoiceBackBtn -->
        <test-method status="PASS" signature="checkSaveInvoiceEmpty()[pri:31, instance:tests.InvoicesPageTests@18be83e4]" name="checkSaveInvoiceEmpty" duration-ms="1564" started-at="2018-08-04T09:16:44Z" finished-at="2018-08-04T09:16:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSaveInvoiceEmpty -->
        <test-method status="PASS" signature="fillInInvoiceToFld()[pri:32, instance:tests.InvoicesPageTests@18be83e4]" name="fillInInvoiceToFld" duration-ms="1833" started-at="2018-08-04T09:16:45Z" finished-at="2018-08-04T09:16:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillInInvoiceToFld -->
        <test-method status="PASS" signature="backFromFilledInoiceForm()[pri:33, instance:tests.InvoicesPageTests@18be83e4]" name="backFromFilledInoiceForm" duration-ms="947" started-at="2018-08-04T09:16:47Z" finished-at="2018-08-04T09:16:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backFromFilledInoiceForm -->
        <test-method status="FAIL" signature="fillInInvoiceFromFld()[pri:34, instance:tests.InvoicesPageTests@18be83e4]" name="fillInInvoiceFromFld" duration-ms="31913" started-at="2018-08-04T09:16:48Z" finished-at="2018-08-04T09:17:20Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of all [] (tried for 30 second(s) with 500 milliseconds interval)
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:32:14.902Z'
System info: host: 'EXECUTIONER-PC', ip: '192.168.22.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.40.565498 (ea082db3280dd6..., userDataDir: C:\Users\EXECUT~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 68.0.3440.84, webStorageEnabled: true}
Session ID: d1e1a4b762455e7b414480728ea1eda6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of all [] (tried for 30 second(s) with 500 milliseconds interval)
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:32:14.902Z'
System info: host: 'EXECUTIONER-PC', ip: '192.168.22.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.40.565498 (ea082db3280dd6..., userDataDir: C:\Users\EXECUT~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 68.0.3440.84, webStorageEnabled: true}
Session ID: d1e1a4b762455e7b414480728ea1eda6
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:81)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
at pages.InvoicesPage.getInvoiceFormClientSelectFromListText(InvoicesPage.java:256)
at tests.InvoicesPageTests.fillInInvoiceFromFld(InvoicesPageTests.java:144)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillInInvoiceFromFld -->
      </class> <!-- tests.InvoicesPageTests -->
      <class name="tests.LoginPageTests">
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.LoginPageTests@8bd1b6a]" name="setUp" is-config="true" duration-ms="3847" started-at="2018-08-04T09:16:34Z" finished-at="2018-08-04T09:16:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkURL()[pri:0, instance:tests.LoginPageTests@8bd1b6a]" name="checkURL" duration-ms="902" started-at="2018-08-04T09:16:38Z" finished-at="2018-08-04T09:16:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkURL -->
        <test-method status="PASS" signature="loginSuccessful()[pri:22, instance:tests.LoginPageTests@8bd1b6a]" name="loginSuccessful" duration-ms="1953" started-at="2018-08-04T09:16:39Z" finished-at="2018-08-04T09:16:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSuccessful -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.LoginPageTests@8bd1b6a]" name="tearDown" is-config="true" duration-ms="2303" started-at="2018-08-04T09:17:20Z" finished-at="2018-08-04T09:17:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginPageTests -->
    </test> <!-- Testing -->
  </suite> <!-- TestSuite -->
</testng-results>
